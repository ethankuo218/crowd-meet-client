// Custom variables
// Note:  These ones were added by us and have nothing to do with Ionic CSS Custom Properties
@import 'theme/mixins/inputs/checkbox-tag';

:host {
  --page-margin: var(--app-broad-margin);
  --page-background: var(--app-background);

  --page-swiper-pagination-space: 40px;
  --page-swiper-pagination-height: 18px;
  --page-pagination-bullet-size: 10px;

  --page-first-slide-background: #abd0f6;
  --page-second-slide-background: #5daaf8;
  --page-third-slide-background: #58a8f8;
  --page-forth-slide-background: #8fc1f3;
  --page-fifth-slide-background: #58a7f6;
  --page-last-slide-background: #84bef8;

  --page-vector-decoration-fill: var(--ion-color-light-shade);
}

.category-scroll-container {
  max-height: 65vh;
  overflow-y: auto;
  width: 100%; // Ensure it takes full width
}

// Note:  All the CSS variables defined below are overrides of Ionic elements CSS Custom Properties
ion-header {
  ion-toolbar {
    --ion-toolbar-background: transparent;

    // For the skip button
    ion-button {
      --color: var(--ion-color-lightest);
    }
  }
}

ion-content {
  // To get the ion-content behind the ion-header
  position: absolute;
  top: 0;
}

.walkthrough-slides {
  --bullet-background: var(--ion-color-dark);
  --bullet-background-active: var(--ion-color-dark);

  height: 100%;

  .slide-inner-row {
    height: 100%;
    width: 100%;
    padding: 0px;
    // Header space
    padding-top: calc(var(--app-header-height) + var(--ion-safe-area-top));
    // .swiper-pagination space
    border-bottom: var(--page-swiper-pagination-space) solid transparent;
    background-clip: padding-box;
    background-color: var(--page-vector-decoration-fill);
  }
}

.illustration-and-decoration-slide {
  &.slide-inner-row {
    --ion-grid-column-padding: 0px;

    flex-flow: column;
    justify-content: flex-start;
    align-items: center;
  }

  .illustration-col {
    flex-grow: 0;
    flex-shrink: 0;
    min-height: auto;
    min-height: fit-content;
    max-width: 30vh;
    padding: 0px;
  }

  .decoration-col {
    flex-grow: 0;
    flex-shrink: 1;

    // To prevent transparent line caused by pixel fractions
    min-height: 12vh;
    transform: translate3d(0px, 0px, 0px);

    .vector-decoration {
      fill: currentColor;
      color: var(--page-vector-decoration-fill);
      background-color: var(--page-background);
      padding-bottom: 4px;

      // To prevent transparent line caused by pixel fractions
      transform: translate3d(0px, 0px, 0px);
      shape-rendering: geometricprecision;
      height: calc(100% + 1px);
    }
  }

  .info-col {
    flex-grow: 1;
    flex-shrink: 0;
    min-height: auto;
    background-color: var(--page-background);

    // To prevent transparent line caused by pixel fractions
    margin-bottom: -1px;
    // Prevent .info-wrapper text to blink as it's over the previous element (Safari issue)
    transform: translate3d(0px, 0px, 0px);

    .info-wrapper {
      margin: calc(var(--page-margin) * -1) var(--page-margin) 0px;
      text-align: left;

      .info-title {
        margin: 0px;
        margin-bottom: var(--page-margin);
        color: #222428;
      }

      .info-paragraph {
        color: var(--ion-color-medium-shade);
        font-size: 14px;
        margin: 0px 0px calc(var(--page-margin) / 2);
        margin-bottom: 0px;

        &:last-child {
          margin-bottom: 0px;
        }
      }
    }
  }
}

.continue-btn {
  margin-top: 2.5rem;
  width: 100%;
}

.first-slide {
  --page-vector-decoration-fill: var(--page-first-slide-background);
}

.second-slide {
  --page-vector-decoration-fill: var(--page-second-slide-background);
}

.third-slide {
  --page-vector-decoration-fill: var(--page-third-slide-background);
}

.forth-slide {
  --page-vector-decoration-fill: var(--page-forth-slide-background);
}

.fifth-slide {
  --page-vector-decoration-fill: var(--page-fifth-slide-background);
}

.last-slide {
  --page-vector-decoration-fill: var(--page-last-slide-background);

  &.slide-inner-row {
    // In the last slide .swiper-pagination is hidden
    border-width: 0px !important;
  }

  .info-col {
    padding: var(--page-margin);

    .info-outer {
      height: 100%;
      align-items: flex-end;
      flex-direction: column;

      .info-wrapper {
        margin: calc(var(--page-margin) * -1) 0px 0px;
      }

      .call-to-actions-wrapper {
        max-height: fit-content;
      }
    }

    .get-started-button {
      margin: 0px;
    }

    .alt-call-to-action-row {
      padding-top: 5px;
      align-items: center;
      justify-content: space-evenly;

      .cta-leading-text {
        color: var(--ion-color-medium);
        font-size: 16px;
      }

      .login-button {
        --color: var(--ion-color-secondary);
        margin: 0px;

        &:focus {
          outline: none;
        }
      }
    }
  }
}

:host(.first-slide-active) {
  .skip-walkthrough-button {
    visibility: hidden;
  }
}

:host(.last-slide-active) {
  ::ng-deep .walkthrough-slides {
    .swiper-pagination {
      display: none;
    }
  }

  .skip-walkthrough-button {
    visibility: hidden;
  }
}

// ISSUE: .swiper-pagination gets rendered dynamically. That prevents styling the elements when using the default Angular ViewEncapsulation.None
//        (Angular doesn't add an '_ngcontent' attribute to the .swiper-pagination because it's dynamically rendered)
// FIX:   See: https://stackoverflow.com/a/36265072/1116959
:host ::ng-deep .walkthrough-slides {
  .swiper-pagination {
    height: var(--page-swiper-pagination-height);
    line-height: 1;
    // .swiper-pagination is 18px height, .slide-inner-row has 40px of padding-bottom => bottom = (40px - 18px)/2 = 11px
    bottom: calc(
      (
          var(--page-swiper-pagination-space) -
            var(--page-swiper-pagination-height)
        ) / 2
    );

    .swiper-pagination-bullet {
      width: var(--page-pagination-bullet-size);
      height: var(--page-pagination-bullet-size);
    }
  }
}

.item.btn_item {
  width: 100%;
}

.btn_item button {
  display: block;
  width: 100%;
  padding: 0.7rem 0;
  border-radius: 20px;
  border: 2px solid var(--ion-color-primary);
  font-size: 16px;
  font-weight: 600;
  margin-bottom: 1.5rem;
}

.active_btn {
  background: var(--ion-color-primary);
  color: #fff !important;
}

.illustration-and-decoration-slide {
  &.slide-inner-row {
    flex-flow: column;
    justify-content: space-between;

    // In the last slide .swiper-pagination is hidden
    border-width: 0px !important;
  }

  .heading-col {
    flex: 0 1 auto;
    max-height: var(--page-max-heading-height);
    max-height: fit-content;
  }

  .question-options-col {
    background-color: var(--page-background);
    overflow: scroll;

    // @include hide-scrollbars();

    .options-list-row {
      --ion-grid-column-padding: 0px;

      padding-top: calc(var(--page-margin) / 4);
      padding-bottom: calc(var(--page-margin) / 4);

      ion-col {
        transform: translateZ(0px);
        padding-top: calc(var(--page-margin) / 4);
        padding-bottom: calc(var(--page-margin) / 4);

        &:nth-child(odd) {
          padding-right: calc(var(--page-margin) / 4);
        }

        &:nth-child(even) {
          padding-left: calc(var(--page-margin) / 4);
        }
      }
    }
  }

  .call-to-action-col {
    flex: 0 1 auto;
    max-height: var(--page-max-call-to-actions-height);
    max-height: fit-content;

    display: flex;
    align-items: flex-end;

    padding-top: calc(var(--page-margin) / 2);

    .signup-button {
      margin: 0px;
      flex: 1 0 100%;
    }
  }

  .custom-checkbox {
    .checkbox-title {
      font-weight: 600;
      font-size: 18px;
      color: var(--ion-color-primary);
      text-align: center;
      word-break: break-word;
      overflow: visible;

      position: absolute;
      width: 70%;
      left: 15%;
      // vertically centered
      top: 50%;
      transform: translateY(-50%);
    }

    ion-checkbox {
      --border-radius: 25px;
      --border-width: 2px;
      --border-color: var(--ion-color-primary);
      --border-color-checked: transparent;
      --background: transparent;
      --background-checked: rgba(12, 140, 240, 0.6);

      height: 100%;
      width: 100%;
      // Note: We cannot change the styles of the .checkbox-icon because it's inside the shadow dom.
      // An alternative would be to set --width and --height to 0px and add a custom overlay and icon in the <custom-checkbox> html
    }

    &.checkbox-checked {
      .checkbox-title {
        display: none;
      }
    }
  }
}

:host ::ng-deep app-aspect-ratio .content-wrapper {
  text-align: center;
}

.checkbox-tags {
  padding: calc(var(--page-margin) / 2)
    calc(var(--page-margin) - var(--page-tags-gutter));

  @include checkbox-tag();

  .checkbox-tag {
    padding: 0px var(--page-tags-gutter);
    margin-right: 0.5rem;
    margin-bottom: 0.2rem;
  }

  // Add a deeper selector to override default colors
  &.square-checkbox-tags {
    background-color: var(--page-background);

    .checkbox-tag {
      --checkbox-tag-color: var(--ion-color-medium);
      --checkbox-tag-background: var(--ion-color-lightest);
      --checkbox-tag-active-color: #fff;
      --checkbox-tag-active-background: var(--ion-color-primary);
    }
  }

  // Add a deeper selector to override default colors
  &.rounded-checkbox-tags {
    .checkbox-tag {
      --checkbox-tag-color: var(--ion-color-lightest);
      --checkbox-tag-background: var(--ion-color-light-shade);
      --checkbox-tag-active-color: #fff;
      --checkbox-tag-active-background: var(--ion-color-primary);
    }
  }
}
